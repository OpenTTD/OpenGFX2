grf {
	//grfid: "OGZ\0";
	grfid: "\FFOT2"; //Adheres to "\FFOT" base set GRF ID range
	name: string(STR_GRF_NAME);
	desc: string(STR_GRF_DESCRIPTION);
	url: string(STR_GRF_URL);
	version: 7;
	min_compatible_version: version_openttd(1, 3, 0);
	param 1 {
		param_cursors_ {
			name: string(STR_PARAM_CURSOR_NAME);
			desc: string(STR_PARAM_CURSOR_DESC);
			type: int;
			def_value: 0;
			min_value: 0;
			max_value: 3;
			names: {
				0: string(STR_PARAM_CURSOR_VALUE_DEFAULT);
				1: string(STR_PARAM_CURSOR_VALUE_CLASSIC_GRAY);
				2: string(STR_PARAM_CURSOR_VALUE_OPENGFX_YELLOW);
				3: string(STR_PARAM_CURSOR_VALUE_WIN_WHITE);
			};
		}
	}
	param 2 {
		param_gridlines_ {
			name: string(STR_PARAM_GRIDLINE_NAME);
			desc: string(STR_PARAM_GRIDLINE_DESC);
			type: int;
			def_value: 0;
			min_value: 0;
			max_value: 2;
			names: {
				0: string(STR_PARAM_GRIDLINE_VALUE_DEFAULT);
				1: string(STR_PARAM_GRIDLINE_VALUE_NOGRIDLINE);
				2: string(STR_PARAM_GRIDLINE_VALUE_WATERGRID);
			};
		}
	}
	param 3 {
		param_logos_ {
			name: string(STR_PARAM_LOGO_NAME);
			desc: string(STR_PARAM_LOGO_DESC);
			type: int;
			def_value: 0;
			min_value: 0;
			max_value: 2;
			names: {
				0: string(STR_PARAM_LOGO_VALUE_DEFAULT);
				1: string(STR_PARAM_LOGO_VALUE_UNDERGROUND);
				2: string(STR_PARAM_LOGO_VALUE_CABRIOLET);
			};
		}
	}
	param 10 {
		param_grass_temperate_ {
			name: string(STR_PARAM_GRASS_TEMPERATE_NAME);
			desc: string(STR_PARAM_GRASS_TEMPERATE_DESC);
			type: int;
			def_value: 0;
			min_value: 0;
			max_value: 2;
			names: {
				0: string(STR_PARAM_VALUE_TEMPERATE_DEFAULT);
				1: string(STR_PARAM_VALUE_ARCTIC);
				2: string(STR_PARAM_VALUE_TROPICAL);
				//3: string(STR_PARAM_VALUE_TOYLAND);
			};
		}
	}
	param 11 {
		param_foundations_temperate_ {
			name: string(STR_PARAM_FOUNDATIONS_TEMPERATE_NAME);
			desc: string(STR_PARAM_FOUNDATIONS_TEMPERATE_DESC);
			type: int;
			def_value: 0;
			min_value: 0;
			max_value: 3;
			names: {
				0: string(STR_PARAM_VALUE_TEMPERATE_DEFAULT);
				1: string(STR_PARAM_VALUE_ARCTIC);
				2: string(STR_PARAM_VALUE_TROPICAL);
				3: string(STR_PARAM_VALUE_TOYLAND);
			};
		}
	}
	param 12 {
		param_trees_temperate_ {
			name: string(STR_PARAM_TREES_TEMPERATE_NAME);
			desc: string(STR_PARAM_TREES_TEMPERATE_DESC);
			type: int;
			def_value: 0;
			min_value: 0;
			max_value: 3;
			names: {
				0: string(STR_PARAM_VALUE_TEMPERATE_DEFAULT);
				1: string(STR_PARAM_VALUE_ARCTIC);
				2: string(STR_PARAM_VALUE_TROPICAL);
				3: string(STR_PARAM_VALUE_TOYLAND);
			};
		}
	}
	param 20 {
		param_grass_arctic_ {
			name: string(STR_PARAM_GRASS_ARCTIC_NAME);
			desc: string(STR_PARAM_GRASS_ARCTIC_DESC);
			type: int;
			def_value: 1;
			min_value: 0;
			max_value: 2;
			names: {
				0: string(STR_PARAM_VALUE_TEMPERATE);
				1: string(STR_PARAM_VALUE_ARCTIC_DEFAULT);
				2: string(STR_PARAM_VALUE_TROPICAL);
				//3: string(STR_PARAM_VALUE_TOYLAND);
			};
		}
	}
	param 21 {
		param_foundations_arctic_ {
			name: string(STR_PARAM_FOUNDATIONS_ARCTIC_NAME);
			desc: string(STR_PARAM_FOUNDATIONS_ARCTIC_DESC);
			type: int;
			def_value: 1;
			min_value: 0;
			max_value: 3;
			names: {
				0: string(STR_PARAM_VALUE_TEMPERATE);
				1: string(STR_PARAM_VALUE_ARCTIC_DEFAULT);
				2: string(STR_PARAM_VALUE_TROPICAL);
				3: string(STR_PARAM_VALUE_TOYLAND);
			};
		}
	}
	param 22 {
		param_trees_arctic_ {
			name: string(STR_PARAM_TREES_ARCTIC_NAME);
			desc: string(STR_PARAM_TREES_ARCTIC_DESC);
			type: int;
			def_value: 1;
			min_value: 0;
			max_value: 3;
			names: {
				0: string(STR_PARAM_VALUE_TEMPERATE);
				1: string(STR_PARAM_VALUE_ARCTIC_DEFAULT);
				2: string(STR_PARAM_VALUE_TROPICAL);
				3: string(STR_PARAM_VALUE_TOYLAND);
			};
		}
	}
	param 30 {
		param_grass_tropical_ {
			name: string(STR_PARAM_GRASS_TROPICAL_NAME);
			desc: string(STR_PARAM_GRASS_TROPICAL_DESC);
			type: int;
			def_value: 2;
			min_value: 0;
			max_value: 2;
			names: {
				0: string(STR_PARAM_VALUE_TEMPERATE);
				1: string(STR_PARAM_VALUE_ARCTIC);
				2: string(STR_PARAM_VALUE_TROPICAL_DEFAULT);
				//3: string(STR_PARAM_VALUE_TOYLAND);
			};
		}
	}
	param 31 {
		param_foundations_tropical_ {
			name: string(STR_PARAM_FOUNDATIONS_TROPICAL_NAME);
			desc: string(STR_PARAM_FOUNDATIONS_TROPICAL_DESC);
			type: int;
			def_value: 2;
			min_value: 0;
			max_value: 3;
			names: {
				0: string(STR_PARAM_VALUE_TEMPERATE);
				1: string(STR_PARAM_VALUE_ARCTIC);
				2: string(STR_PARAM_VALUE_TROPICAL_DEFAULT);
				3: string(STR_PARAM_VALUE_TOYLAND);
			};
		}
	}
	param 32 {
		param_trees_tropical_ {
			name: string(STR_PARAM_TREES_TROPICAL_NAME);
			desc: string(STR_PARAM_TREES_TROPICAL_DESC);
			type: int;
			def_value: 2;
			min_value: 0;
			max_value: 3;
			names: {
				0: string(STR_PARAM_VALUE_TEMPERATE);
				1: string(STR_PARAM_VALUE_ARCTIC);
				2: string(STR_PARAM_VALUE_TROPICAL_DEFAULT);
				3: string(STR_PARAM_VALUE_TOYLAND);
			};
		}
	}
	param 40 {
		param_grass_toyland_ {
			name: string(STR_PARAM_GRASS_TOYLAND_NAME);
			desc: string(STR_PARAM_GRASS_TOYLAND_DESC);
			type: int;
			def_value: 3;
			min_value: 3;
			max_value: 4;
			names: {
				//0: string(STR_PARAM_VALUE_TEMPERATE);
				//1: string(STR_PARAM_VALUE_ARCTIC);
				//2: string(STR_PARAM_VALUE_TROPICAL);
				3: string(STR_PARAM_VALUE_TOYLAND_DEFAULT);
				4: string(STR_PARAM_VALUE_TOYLAND_ALTERNATE);
			};
		}
	}
	param 41 {
		param_foundations_toyland_ {
			name: string(STR_PARAM_FOUNDATIONS_TOYLAND_NAME);
			desc: string(STR_PARAM_FOUNDATIONS_TOYLAND_DESC);
			type: int;
			def_value: 3;
			min_value: 0;
			max_value: 3;
			names: {
				0: string(STR_PARAM_VALUE_TEMPERATE);
				1: string(STR_PARAM_VALUE_ARCTIC);
				2: string(STR_PARAM_VALUE_TROPICAL);
				3: string(STR_PARAM_VALUE_TOYLAND_DEFAULT);
			};
		}
	}
	param 42 {
		param_trees_toyland_ {
			name: string(STR_PARAM_TREES_TOYLAND_NAME);
			desc: string(STR_PARAM_TREES_TOYLAND_DESC);
			type: int;
			def_value: 3;
			min_value: 0;
			max_value: 4;
			names: {
				0: string(STR_PARAM_VALUE_TEMPERATE);
				1: string(STR_PARAM_VALUE_ARCTIC);
				2: string(STR_PARAM_VALUE_TROPICAL);
				3: string(STR_PARAM_VALUE_TOYLAND_DEFAULT);
				4: string(STR_PARAM_VALUE_TOYLAND_ALTERNATE);
			};
		}
	}
}

// Tested, largely glitch-free and functional in 1.3.0
if (ttd_platform == PLATFORM_OPENTTD) {
	if (openttd_version < version_openttd(1, 3, 0)) {
		error(FATAL, REQUIRES_OPENTTD, "1.3.0");
	}
}

// Not designed with TTDPatch compatibility in mind!
if (ttd_platform != PLATFORM_OPENTTD) {
	error(FATAL, REQUIRES_OPENTTD, "1.3.0");
}

//Inherit functional parameters from hard-coded values, `grf` block temporary values, or settings grf
// Base set defined values
if (openttd_version < version_openttd(14, 0)) {
	//error(WARNING, string(STR_WARN_SETTINGSGRF_HARDCODED));
	// No base set parameter support prior to 13.4, and defaults from `grf` block not respected, so use hard-code values
	param_cursors = 0;
	param_gridlines = 0;
	param_logos = 0;
	param_foundations_temperate = 0;
	param_foundations_arctic = 1;
	param_foundations_tropical = 2;
	param_foundations_toyland = 3;
	param_grass_temperate = 0;
	param_grass_arctic = 1;
	param_grass_tropical = 2;
	param_grass_toyland = 3;
	param_trees_temperate = 0;
	param_trees_arctic = 1;
	param_trees_tropical = 2;
	param_trees_toyland = 3;
} else if (openttd_version >= version_openttd(14, 0)) {
	//error(WARNING, string(STR_WARN_SETTINGSGRF_BASESETPARAM));
	// Base set parameter support for versions 14.0 onward, load from `grf` block temporary values
	// Actually nightlies from 30/10/2023 / from Github commit e81313e
	param_cursors = param_cursors_;
	param_gridlines = param_gridlines_;
	param_logos = param_logos_;
	param_foundations_temperate = param_foundations_temperate_;
	param_foundations_arctic = param_foundations_arctic_;
	param_foundations_tropical = param_foundations_tropical_;
	param_foundations_toyland = param_foundations_toyland_;
	param_grass_temperate = param_grass_temperate_;
	param_grass_arctic = param_grass_arctic_;
	param_grass_tropical = param_grass_tropical_;
	param_grass_toyland = param_grass_toyland_;
	param_trees_temperate = param_trees_temperate_;
	param_trees_arctic = param_trees_arctic_;
	param_trees_tropical = param_trees_tropical_;
	param_trees_toyland = param_trees_toyland_;
}

// Check if the settings grf will be loaded, and load from its parameter values
if (grf_future_status("OGZ\1")==1) {
	//error(WARNING, string(STR_WARN_SETTINGSGRF_SETTINGSGRFPARAM));
	// Check settings grf version, and warn if it's not the expected version to match this version of the base set
	if (param["OGZ\1", 254]!=7) {
		error(WARNING, string(STR_WARN_SETTINGSGRF_VERSIONMISMATCH));
	}
	// Check OpenTTD version, and warn if it's recommended to use base set parameters instead of the settings grf
	if (openttd_version >= version_openttd(14, 0)) {
		error(WARNING, string(STR_WARN_SETTINGSGRF_NOTRECOMMENDED));
	}
	// Load parameters from settings grf
	param_cursors = param["OGZ\1", 1];
	param_gridlines = param["OGZ\1", 2];
	param_logos = param["OGZ\1", 3];
	param_foundations_temperate = param["OGZ\1", 11];
	param_foundations_arctic = param["OGZ\1", 21];
	param_foundations_tropical = param["OGZ\1", 31];
	param_foundations_toyland = param["OGZ\1", 41];
	param_grass_temperate = param["OGZ\1", 10];
	param_grass_arctic = param["OGZ\1", 20];
	param_grass_tropical = param["OGZ\1", 30];
	param_grass_toyland = param["OGZ\1", 40];
	param_trees_temperate = param["OGZ\1", 12];
	param_trees_arctic = param["OGZ\1", 22];
	param_trees_tropical = param["OGZ\1", 32];
	param_trees_toyland = param["OGZ\1", 42];
}
